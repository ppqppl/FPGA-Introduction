|HC_SR04_TOP
Clk => Clk.IN2
Rst_n => Rst_n.IN2
echo => echo.IN1
trig << hc_sr_driver:hc_sr_driver.trig
hex1[0] << seg_driver:seg_driver.hex1
hex1[1] << seg_driver:seg_driver.hex1
hex1[2] << seg_driver:seg_driver.hex1
hex1[3] << seg_driver:seg_driver.hex1
hex1[4] << seg_driver:seg_driver.hex1
hex1[5] << seg_driver:seg_driver.hex1
hex1[6] << seg_driver:seg_driver.hex1
hex2[0] << seg_driver:seg_driver.hex2
hex2[1] << seg_driver:seg_driver.hex2
hex2[2] << seg_driver:seg_driver.hex2
hex2[3] << seg_driver:seg_driver.hex2
hex2[4] << seg_driver:seg_driver.hex2
hex2[5] << seg_driver:seg_driver.hex2
hex2[6] << seg_driver:seg_driver.hex2
hex3[0] << seg_driver:seg_driver.hex3
hex3[1] << seg_driver:seg_driver.hex3
hex3[2] << seg_driver:seg_driver.hex3
hex3[3] << seg_driver:seg_driver.hex3
hex3[4] << seg_driver:seg_driver.hex3
hex3[5] << seg_driver:seg_driver.hex3
hex3[6] << seg_driver:seg_driver.hex3
hex4[0] << seg_driver:seg_driver.hex4
hex4[1] << seg_driver:seg_driver.hex4
hex4[2] << seg_driver:seg_driver.hex4
hex4[3] << seg_driver:seg_driver.hex4
hex4[4] << seg_driver:seg_driver.hex4
hex4[5] << seg_driver:seg_driver.hex4
hex4[6] << seg_driver:seg_driver.hex4
hex5[0] << seg_driver:seg_driver.hex5
hex5[1] << seg_driver:seg_driver.hex5
hex5[2] << seg_driver:seg_driver.hex5
hex5[3] << seg_driver:seg_driver.hex5
hex5[4] << seg_driver:seg_driver.hex5
hex5[5] << seg_driver:seg_driver.hex5
hex5[6] << seg_driver:seg_driver.hex5
hex6[0] << seg_driver:seg_driver.hex6
hex6[1] << seg_driver:seg_driver.hex6
hex6[2] << seg_driver:seg_driver.hex6
hex6[3] << seg_driver:seg_driver.hex6
hex6[4] << seg_driver:seg_driver.hex6
hex6[5] << seg_driver:seg_driver.hex6
hex6[6] << seg_driver:seg_driver.hex6
hex7[0] << seg_driver:seg_driver.hex7
hex7[1] << seg_driver:seg_driver.hex7
hex7[2] << seg_driver:seg_driver.hex7
hex7[3] << seg_driver:seg_driver.hex7
hex7[4] << seg_driver:seg_driver.hex7
hex7[5] << seg_driver:seg_driver.hex7
hex7[6] << seg_driver:seg_driver.hex7
hex8[0] << seg_driver:seg_driver.hex8
hex8[1] << seg_driver:seg_driver.hex8
hex8[2] << seg_driver:seg_driver.hex8
hex8[3] << seg_driver:seg_driver.hex8
hex8[4] << seg_driver:seg_driver.hex8
hex8[5] << seg_driver:seg_driver.hex8
hex8[6] << seg_driver:seg_driver.hex8


|HC_SR04_TOP|hc_sr_driver:hc_sr_driver
Clk => Clk.IN2
Rst_n => Rst_n.IN3
echo => echo.IN1
trig <= hc_sr_trig:hc_sr_trig.trig
data_o[0] <= hc_sr_echo:hc_sr_echo.data_o
data_o[1] <= hc_sr_echo:hc_sr_echo.data_o
data_o[2] <= hc_sr_echo:hc_sr_echo.data_o
data_o[3] <= hc_sr_echo:hc_sr_echo.data_o
data_o[4] <= hc_sr_echo:hc_sr_echo.data_o
data_o[5] <= hc_sr_echo:hc_sr_echo.data_o
data_o[6] <= hc_sr_echo:hc_sr_echo.data_o
data_o[7] <= hc_sr_echo:hc_sr_echo.data_o
data_o[8] <= hc_sr_echo:hc_sr_echo.data_o
data_o[9] <= hc_sr_echo:hc_sr_echo.data_o
data_o[10] <= hc_sr_echo:hc_sr_echo.data_o
data_o[11] <= hc_sr_echo:hc_sr_echo.data_o
data_o[12] <= hc_sr_echo:hc_sr_echo.data_o
data_o[13] <= hc_sr_echo:hc_sr_echo.data_o
data_o[14] <= hc_sr_echo:hc_sr_echo.data_o
data_o[15] <= hc_sr_echo:hc_sr_echo.data_o
data_o[16] <= hc_sr_echo:hc_sr_echo.data_o
data_o[17] <= hc_sr_echo:hc_sr_echo.data_o
data_o[18] <= hc_sr_echo:hc_sr_echo.data_o


|HC_SR04_TOP|hc_sr_driver:hc_sr_driver|clk_div:clk_div
Clk => cnt[0].CLK
Clk => cnt[1].CLK
Clk => cnt[2].CLK
Clk => cnt[3].CLK
Clk => cnt[4].CLK
Clk => cnt[5].CLK
Rst_n => cnt[0].ACLR
Rst_n => cnt[1].ACLR
Rst_n => cnt[2].ACLR
Rst_n => cnt[3].ACLR
Rst_n => cnt[4].ACLR
Rst_n => cnt[5].ACLR
clk_us <= LessThan0.DB_MAX_OUTPUT_PORT_TYPE


|HC_SR04_TOP|hc_sr_driver:hc_sr_driver|hc_sr_trig:hc_sr_trig
clk_us => cnt[0].CLK
clk_us => cnt[1].CLK
clk_us => cnt[2].CLK
clk_us => cnt[3].CLK
clk_us => cnt[4].CLK
clk_us => cnt[5].CLK
clk_us => cnt[6].CLK
clk_us => cnt[7].CLK
clk_us => cnt[8].CLK
clk_us => cnt[9].CLK
clk_us => cnt[10].CLK
clk_us => cnt[11].CLK
clk_us => cnt[12].CLK
clk_us => cnt[13].CLK
clk_us => cnt[14].CLK
clk_us => cnt[15].CLK
clk_us => cnt[16].CLK
clk_us => cnt[17].CLK
clk_us => cnt[18].CLK
Rst_n => cnt[0].ACLR
Rst_n => cnt[1].ACLR
Rst_n => cnt[2].ACLR
Rst_n => cnt[3].ACLR
Rst_n => cnt[4].ACLR
Rst_n => cnt[5].ACLR
Rst_n => cnt[6].ACLR
Rst_n => cnt[7].ACLR
Rst_n => cnt[8].ACLR
Rst_n => cnt[9].ACLR
Rst_n => cnt[10].ACLR
Rst_n => cnt[11].ACLR
Rst_n => cnt[12].ACLR
Rst_n => cnt[13].ACLR
Rst_n => cnt[14].ACLR
Rst_n => cnt[15].ACLR
Rst_n => cnt[16].ACLR
Rst_n => cnt[17].ACLR
Rst_n => cnt[18].ACLR
trig <= LessThan1.DB_MAX_OUTPUT_PORT_TYPE


|HC_SR04_TOP|hc_sr_driver:hc_sr_driver|hc_sr_echo:hc_sr_echo
Clk => data_r[1].CLK
Clk => data_r[2].CLK
Clk => data_r[3].CLK
Clk => data_r[4].CLK
Clk => data_r[5].CLK
Clk => data_r[6].CLK
Clk => data_r[7].CLK
Clk => data_r[8].CLK
Clk => data_r[9].CLK
Clk => data_r[10].CLK
Clk => data_r[11].CLK
Clk => data_r[12].CLK
Clk => data_r[13].CLK
Clk => data_r[14].CLK
Clk => data_r[15].CLK
Clk => data_r[16].CLK
Clk => data_r[17].CLK
Clk => data_r[18].CLK
Clk => r2_echo.CLK
Clk => r1_echo.CLK
clk_us => cnt[0].CLK
clk_us => cnt[1].CLK
clk_us => cnt[2].CLK
clk_us => cnt[3].CLK
clk_us => cnt[4].CLK
clk_us => cnt[5].CLK
clk_us => cnt[6].CLK
clk_us => cnt[7].CLK
clk_us => cnt[8].CLK
clk_us => cnt[9].CLK
clk_us => cnt[10].CLK
clk_us => cnt[11].CLK
clk_us => cnt[12].CLK
clk_us => cnt[13].CLK
clk_us => cnt[14].CLK
clk_us => cnt[15].CLK
Rst_n => data_r[1].PRESET
Rst_n => data_r[2].ACLR
Rst_n => data_r[3].ACLR
Rst_n => data_r[4].ACLR
Rst_n => data_r[5].ACLR
Rst_n => data_r[6].ACLR
Rst_n => data_r[7].ACLR
Rst_n => data_r[8].ACLR
Rst_n => data_r[9].ACLR
Rst_n => data_r[10].ACLR
Rst_n => data_r[11].ACLR
Rst_n => data_r[12].ACLR
Rst_n => data_r[13].ACLR
Rst_n => data_r[14].ACLR
Rst_n => data_r[15].ACLR
Rst_n => data_r[16].ACLR
Rst_n => data_r[17].ACLR
Rst_n => data_r[18].ACLR
Rst_n => r2_echo.ACLR
Rst_n => r1_echo.ACLR
Rst_n => cnt[0].ACLR
Rst_n => cnt[1].ACLR
Rst_n => cnt[2].ACLR
Rst_n => cnt[3].ACLR
Rst_n => cnt[4].ACLR
Rst_n => cnt[5].ACLR
Rst_n => cnt[6].ACLR
Rst_n => cnt[7].ACLR
Rst_n => cnt[8].ACLR
Rst_n => cnt[9].ACLR
Rst_n => cnt[10].ACLR
Rst_n => cnt[11].ACLR
Rst_n => cnt[12].ACLR
Rst_n => cnt[13].ACLR
Rst_n => cnt[14].ACLR
Rst_n => cnt[15].ACLR
echo => cnt.OUTPUTSELECT
echo => cnt.OUTPUTSELECT
echo => cnt.OUTPUTSELECT
echo => cnt.OUTPUTSELECT
echo => cnt.OUTPUTSELECT
echo => cnt.OUTPUTSELECT
echo => cnt.OUTPUTSELECT
echo => cnt.OUTPUTSELECT
echo => cnt.OUTPUTSELECT
echo => cnt.OUTPUTSELECT
echo => cnt.OUTPUTSELECT
echo => cnt.OUTPUTSELECT
echo => cnt.OUTPUTSELECT
echo => cnt.OUTPUTSELECT
echo => cnt.OUTPUTSELECT
echo => cnt.OUTPUTSELECT
echo => end_cnt.IN1
echo => r1_echo.DATAIN
data_o[0] <= data_r[1].DB_MAX_OUTPUT_PORT_TYPE
data_o[1] <= data_r[2].DB_MAX_OUTPUT_PORT_TYPE
data_o[2] <= data_r[3].DB_MAX_OUTPUT_PORT_TYPE
data_o[3] <= data_r[4].DB_MAX_OUTPUT_PORT_TYPE
data_o[4] <= data_r[5].DB_MAX_OUTPUT_PORT_TYPE
data_o[5] <= data_r[6].DB_MAX_OUTPUT_PORT_TYPE
data_o[6] <= data_r[7].DB_MAX_OUTPUT_PORT_TYPE
data_o[7] <= data_r[8].DB_MAX_OUTPUT_PORT_TYPE
data_o[8] <= data_r[9].DB_MAX_OUTPUT_PORT_TYPE
data_o[9] <= data_r[10].DB_MAX_OUTPUT_PORT_TYPE
data_o[10] <= data_r[11].DB_MAX_OUTPUT_PORT_TYPE
data_o[11] <= data_r[12].DB_MAX_OUTPUT_PORT_TYPE
data_o[12] <= data_r[13].DB_MAX_OUTPUT_PORT_TYPE
data_o[13] <= data_r[14].DB_MAX_OUTPUT_PORT_TYPE
data_o[14] <= data_r[15].DB_MAX_OUTPUT_PORT_TYPE
data_o[15] <= data_r[16].DB_MAX_OUTPUT_PORT_TYPE
data_o[16] <= data_r[17].DB_MAX_OUTPUT_PORT_TYPE
data_o[17] <= data_r[18].DB_MAX_OUTPUT_PORT_TYPE
data_o[18] <= <GND>


|HC_SR04_TOP|seg_driver:seg_driver
clk => hex8[0]~reg0.CLK
clk => hex8[1]~reg0.CLK
clk => hex8[2]~reg0.CLK
clk => hex8[3]~reg0.CLK
clk => hex8[4]~reg0.CLK
clk => hex8[5]~reg0.CLK
clk => hex8[6]~reg0.CLK
clk => hex7[0]~reg0.CLK
clk => hex7[1]~reg0.CLK
clk => hex7[2]~reg0.CLK
clk => hex7[3]~reg0.CLK
clk => hex7[4]~reg0.CLK
clk => hex7[5]~reg0.CLK
clk => hex7[6]~reg0.CLK
clk => hex6[0]~reg0.CLK
clk => hex6[1]~reg0.CLK
clk => hex6[2]~reg0.CLK
clk => hex6[3]~reg0.CLK
clk => hex6[4]~reg0.CLK
clk => hex6[5]~reg0.CLK
clk => hex6[6]~reg0.CLK
clk => hex5[0]~reg0.CLK
clk => hex5[1]~reg0.CLK
clk => hex5[2]~reg0.CLK
clk => hex5[3]~reg0.CLK
clk => hex5[4]~reg0.CLK
clk => hex5[5]~reg0.CLK
clk => hex5[6]~reg0.CLK
clk => hex4[0]~reg0.CLK
clk => hex4[1]~reg0.CLK
clk => hex4[2]~reg0.CLK
clk => hex4[3]~reg0.CLK
clk => hex4[4]~reg0.CLK
clk => hex4[5]~reg0.CLK
clk => hex4[6]~reg0.CLK
clk => hex3[0]~reg0.CLK
clk => hex3[1]~reg0.CLK
clk => hex3[2]~reg0.CLK
clk => hex3[3]~reg0.CLK
clk => hex3[4]~reg0.CLK
clk => hex3[5]~reg0.CLK
clk => hex3[6]~reg0.CLK
clk => hex2[0]~reg0.CLK
clk => hex2[1]~reg0.CLK
clk => hex2[2]~reg0.CLK
clk => hex2[3]~reg0.CLK
clk => hex2[4]~reg0.CLK
clk => hex2[5]~reg0.CLK
clk => hex2[6]~reg0.CLK
clk => hex1[0]~reg0.CLK
clk => hex1[1]~reg0.CLK
clk => hex1[2]~reg0.CLK
clk => hex1[3]~reg0.CLK
clk => hex1[4]~reg0.CLK
clk => hex1[5]~reg0.CLK
clk => hex1[6]~reg0.CLK
clk => point_3[0].CLK
clk => point_3[1].CLK
clk => point_3[2].CLK
clk => point_3[3].CLK
clk => point_2[0].CLK
clk => point_2[1].CLK
clk => point_2[2].CLK
clk => point_2[3].CLK
clk => point_1[0].CLK
clk => point_1[1].CLK
clk => point_1[2].CLK
clk => point_1[3].CLK
clk => cm_unit[0].CLK
clk => cm_unit[1].CLK
clk => cm_unit[2].CLK
clk => cm_unit[3].CLK
clk => cm_ten[0].CLK
clk => cm_ten[1].CLK
clk => cm_ten[2].CLK
clk => cm_ten[3].CLK
clk => cm_hund[0].CLK
clk => cm_hund[1].CLK
clk => cm_hund[2].CLK
clk => cm_hund[3].CLK
rst_n => hex8[0]~reg0.ACLR
rst_n => hex8[1]~reg0.ACLR
rst_n => hex8[2]~reg0.ACLR
rst_n => hex8[3]~reg0.ACLR
rst_n => hex8[4]~reg0.ACLR
rst_n => hex8[5]~reg0.ACLR
rst_n => hex8[6]~reg0.ACLR
rst_n => hex7[0]~reg0.ACLR
rst_n => hex7[1]~reg0.ACLR
rst_n => hex7[2]~reg0.ACLR
rst_n => hex7[3]~reg0.ACLR
rst_n => hex7[4]~reg0.ACLR
rst_n => hex7[5]~reg0.ACLR
rst_n => hex7[6]~reg0.ACLR
rst_n => hex6[0]~reg0.ACLR
rst_n => hex6[1]~reg0.ACLR
rst_n => hex6[2]~reg0.ACLR
rst_n => hex6[3]~reg0.ACLR
rst_n => hex6[4]~reg0.ACLR
rst_n => hex6[5]~reg0.ACLR
rst_n => hex6[6]~reg0.ACLR
rst_n => hex5[0]~reg0.ACLR
rst_n => hex5[1]~reg0.ACLR
rst_n => hex5[2]~reg0.ACLR
rst_n => hex5[3]~reg0.ACLR
rst_n => hex5[4]~reg0.ACLR
rst_n => hex5[5]~reg0.ACLR
rst_n => hex5[6]~reg0.ACLR
rst_n => hex4[0]~reg0.ACLR
rst_n => hex4[1]~reg0.ACLR
rst_n => hex4[2]~reg0.ACLR
rst_n => hex4[3]~reg0.ACLR
rst_n => hex4[4]~reg0.ACLR
rst_n => hex4[5]~reg0.ACLR
rst_n => hex4[6]~reg0.ACLR
rst_n => hex3[0]~reg0.ACLR
rst_n => hex3[1]~reg0.ACLR
rst_n => hex3[2]~reg0.ACLR
rst_n => hex3[3]~reg0.ACLR
rst_n => hex3[4]~reg0.ACLR
rst_n => hex3[5]~reg0.ACLR
rst_n => hex3[6]~reg0.ACLR
rst_n => hex2[0]~reg0.ACLR
rst_n => hex2[1]~reg0.ACLR
rst_n => hex2[2]~reg0.ACLR
rst_n => hex2[3]~reg0.ACLR
rst_n => hex2[4]~reg0.ACLR
rst_n => hex2[5]~reg0.ACLR
rst_n => hex2[6]~reg0.ACLR
rst_n => hex1[0]~reg0.ACLR
rst_n => hex1[1]~reg0.ACLR
rst_n => hex1[2]~reg0.ACLR
rst_n => hex1[3]~reg0.ACLR
rst_n => hex1[4]~reg0.ACLR
rst_n => hex1[5]~reg0.ACLR
rst_n => hex1[6]~reg0.ACLR
rst_n => point_3[0].ACLR
rst_n => point_3[1].ACLR
rst_n => point_3[2].ACLR
rst_n => point_3[3].ACLR
rst_n => point_2[0].ACLR
rst_n => point_2[1].ACLR
rst_n => point_2[2].ACLR
rst_n => point_2[3].ACLR
rst_n => point_1[0].ACLR
rst_n => point_1[1].ACLR
rst_n => point_1[2].ACLR
rst_n => point_1[3].ACLR
rst_n => cm_unit[0].ACLR
rst_n => cm_unit[1].ACLR
rst_n => cm_unit[2].ACLR
rst_n => cm_unit[3].ACLR
rst_n => cm_ten[0].ACLR
rst_n => cm_ten[1].ACLR
rst_n => cm_ten[2].ACLR
rst_n => cm_ten[3].ACLR
rst_n => cm_hund[0].ACLR
rst_n => cm_hund[1].ACLR
rst_n => cm_hund[2].ACLR
rst_n => cm_hund[3].ACLR
data_in[0] => Div0.IN35
data_in[0] => Div1.IN32
data_in[0] => Div2.IN28
data_in[0] => Div3.IN25
data_in[0] => Div4.IN22
data_in[0] => Mod4.IN22
data_in[1] => Div0.IN34
data_in[1] => Div1.IN31
data_in[1] => Div2.IN27
data_in[1] => Div3.IN24
data_in[1] => Div4.IN21
data_in[1] => Mod4.IN21
data_in[2] => Div0.IN33
data_in[2] => Div1.IN30
data_in[2] => Div2.IN26
data_in[2] => Div3.IN23
data_in[2] => Div4.IN20
data_in[2] => Mod4.IN20
data_in[3] => Div0.IN32
data_in[3] => Div1.IN29
data_in[3] => Div2.IN25
data_in[3] => Div3.IN22
data_in[3] => Div4.IN19
data_in[3] => Mod4.IN19
data_in[4] => Div0.IN31
data_in[4] => Div1.IN28
data_in[4] => Div2.IN24
data_in[4] => Div3.IN21
data_in[4] => Div4.IN18
data_in[4] => Mod4.IN18
data_in[5] => Div0.IN30
data_in[5] => Div1.IN27
data_in[5] => Div2.IN23
data_in[5] => Div3.IN20
data_in[5] => Div4.IN17
data_in[5] => Mod4.IN17
data_in[6] => Div0.IN29
data_in[6] => Div1.IN26
data_in[6] => Div2.IN22
data_in[6] => Div3.IN19
data_in[6] => Div4.IN16
data_in[6] => Mod4.IN16
data_in[7] => Div0.IN28
data_in[7] => Div1.IN25
data_in[7] => Div2.IN21
data_in[7] => Div3.IN18
data_in[7] => Div4.IN15
data_in[7] => Mod4.IN15
data_in[8] => Div0.IN27
data_in[8] => Div1.IN24
data_in[8] => Div2.IN20
data_in[8] => Div3.IN17
data_in[8] => Div4.IN14
data_in[8] => Mod4.IN14
data_in[9] => Div0.IN26
data_in[9] => Div1.IN23
data_in[9] => Div2.IN19
data_in[9] => Div3.IN16
data_in[9] => Div4.IN13
data_in[9] => Mod4.IN13
data_in[10] => Div0.IN25
data_in[10] => Div1.IN22
data_in[10] => Div2.IN18
data_in[10] => Div3.IN15
data_in[10] => Div4.IN12
data_in[10] => Mod4.IN12
data_in[11] => Div0.IN24
data_in[11] => Div1.IN21
data_in[11] => Div2.IN17
data_in[11] => Div3.IN14
data_in[11] => Div4.IN11
data_in[11] => Mod4.IN11
data_in[12] => Div0.IN23
data_in[12] => Div1.IN20
data_in[12] => Div2.IN16
data_in[12] => Div3.IN13
data_in[12] => Div4.IN10
data_in[12] => Mod4.IN10
data_in[13] => Div0.IN22
data_in[13] => Div1.IN19
data_in[13] => Div2.IN15
data_in[13] => Div3.IN12
data_in[13] => Div4.IN9
data_in[13] => Mod4.IN9
data_in[14] => Div0.IN21
data_in[14] => Div1.IN18
data_in[14] => Div2.IN14
data_in[14] => Div3.IN11
data_in[14] => Div4.IN8
data_in[14] => Mod4.IN8
data_in[15] => Div0.IN20
data_in[15] => Div1.IN17
data_in[15] => Div2.IN13
data_in[15] => Div3.IN10
data_in[15] => Div4.IN7
data_in[15] => Mod4.IN7
data_in[16] => Div0.IN19
data_in[16] => Div1.IN16
data_in[16] => Div2.IN12
data_in[16] => Div3.IN9
data_in[16] => Div4.IN6
data_in[16] => Mod4.IN6
data_in[17] => Div0.IN18
data_in[17] => Div1.IN15
data_in[17] => Div2.IN11
data_in[17] => Div3.IN8
data_in[17] => Div4.IN5
data_in[17] => Mod4.IN5
data_in[18] => Div0.IN17
data_in[18] => Div1.IN14
data_in[18] => Div2.IN10
data_in[18] => Div3.IN7
data_in[18] => Div4.IN4
data_in[18] => Mod4.IN4
hex1[0] <= hex1[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex1[1] <= hex1[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex1[2] <= hex1[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex1[3] <= hex1[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex1[4] <= hex1[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex1[5] <= hex1[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex1[6] <= hex1[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex2[0] <= hex2[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex2[1] <= hex2[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex2[2] <= hex2[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex2[3] <= hex2[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex2[4] <= hex2[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex2[5] <= hex2[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex2[6] <= hex2[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex3[0] <= hex3[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex3[1] <= hex3[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex3[2] <= hex3[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex3[3] <= hex3[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex3[4] <= hex3[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex3[5] <= hex3[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex3[6] <= hex3[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex4[0] <= hex4[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex4[1] <= hex4[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex4[2] <= hex4[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex4[3] <= hex4[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex4[4] <= hex4[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex4[5] <= hex4[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex4[6] <= hex4[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex5[0] <= hex5[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex5[1] <= hex5[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex5[2] <= hex5[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex5[3] <= hex5[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex5[4] <= hex5[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex5[5] <= hex5[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex5[6] <= hex5[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex6[0] <= hex6[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex6[1] <= hex6[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex6[2] <= hex6[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex6[3] <= hex6[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex6[4] <= hex6[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex6[5] <= hex6[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex6[6] <= hex6[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex7[0] <= hex7[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex7[1] <= hex7[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex7[2] <= hex7[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex7[3] <= hex7[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex7[4] <= hex7[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex7[5] <= hex7[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex7[6] <= hex7[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex8[0] <= hex8[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex8[1] <= hex8[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex8[2] <= hex8[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex8[3] <= hex8[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex8[4] <= hex8[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex8[5] <= hex8[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex8[6] <= hex8[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE


